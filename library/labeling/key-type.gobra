package labeling

type KeyType domain {
    // constructors
    // type 0
    func KeyTypePke() KeyType
    // type 1
    func KeyTypeDh() KeyType
    // type 2
    func KeyTypeSigning() KeyType

    // deconstructors

    // WARNING: adapt first axiom if another Term is added!
    func getKeyTypeType(KeyType) int

    axiom { // every key type belongs to a known type
        forall t KeyType :: { getKeyTypeType(t) } 0 <= getKeyTypeType(t) && getKeyTypeType(t) <= 2
    }

    axiom {
        getKeyTypeType(KeyTypePke()) == 0
    }
    axiom { // KeyTypePke implies its constructions
        forall t KeyType :: { getKeyTypeType(t) } getKeyTypeType(t) == 0 ==>
            t == KeyTypePke()
    }

    axiom {
        getKeyTypeType(KeyTypeDh()) == 1
    }
    axiom { // KeyTypeDh implies its constructions
        forall t KeyType :: { getKeyTypeType(t) } getKeyTypeType(t) == 1 ==>
            t == KeyTypeDh()
    }

    axiom {
        getKeyTypeType(KeyTypeSigning()) == 2
    }
    axiom { // KeyTypeDh implies its constructions
        forall t KeyType :: { getKeyTypeType(t) } getKeyTypeType(t) == 2 ==>
            t == KeyTypeSigning()
    }
}

decreases
func GetArbKeyType() KeyType
